# -*- coding: utf-8 -*-
# time:2023/7/26 10:38
# file test45.py
# outhor:czy
# email:1060324818@qq.com

# Generated by Selenium IDEnhxsa
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities


class TestUsename():
    def setup_method(self, method):
        self.driver = webdriver.Chrome()
        self.vars = {}

    def teardown_method(self, method):
        self.driver.quit()

    def wait_for_window(self, timeout=2):
        time.sleep(round(timeout / 1000))
        wh_now = self.driver.window_handles
        wh_then = self.vars["window_handles"]
        if len(wh_now) > len(wh_then):
            return set(wh_now).difference(set(wh_then)).pop()

    def test_usename(self):
        self.driver.get("http://cqchengshigengxin.com/index")
        self.driver.set_window_size(1176, 680)
        self.vars["window_handles"] = self.driver.window_handles
        self.driver.find_element(By.LINK_TEXT, "登录").click()
        self.vars["win6599"] = self.wait_for_window(2000)
        self.driver.switch_to.window(self.vars["win6599"])
        self.driver.find_element(By.NAME, "username").click()
        self.driver.find_element(By.NAME, "username").send_keys("17754928264")
        self.driver.find_element(By.NAME, "password").send_keys("gujiguji0830")
        self.driver.find_element(By.NAME, "validateCode").click()
        self.driver.find_element(By.NAME, "validateCode").send_keys("1")
        self.driver.find_element(By.ID, "btnSubmit").click()
        element = self.driver.find_element(By.ID, "btnSubmit")
        actions = ActionChains(self.driver)
        actions.move_to_element(element).perform()
        element = self.driver.find_element(By.CSS_SELECTOR, "body")
        actions = ActionChains(self.driver)
        actions.move_to_element(element, 0, 0).perform()
        self.driver.execute_script("window.scrollTo(0,438.0636291503906)")



