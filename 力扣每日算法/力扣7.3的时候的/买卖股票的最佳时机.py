'''
给你一个整数数组 prices ，其中 prices[i] 表示某支股票第 i 天的价格。

在每一天，你可以决定是否购买和/或出售股票。你在任何时候 最多 只能持有 一股 股票。你也可以先购买，然后在 同一天 出售。

返回 你能获得的 最大 利润 。

输入：prices = [7,1,5,3,6,4]
输出：7
解释：在第 2 天（股票价格 = 1）的时候买入，在第 3 天（股票价格 = 5）的时候卖出, 这笔交易所能获得利润 = 5 - 1 = 4 。
     随后，在第 4 天（股票价格 = 3）的时候买入，在第 5 天（股票价格 = 6）的时候卖出, 这笔交易所能获得利润 = 6 - 3 = 3 。
     总利润为 4 + 3 = 7 。

输入：prices = [1,2,3,4,5]
输出：4
解释：在第 1 天（股票价格 = 1）的时候买入，在第 5 天 （股票价格 = 5）的时候卖出, 这笔交易所能获得利润 = 5 - 1 = 4 。
     总利润为 4 。

解：
只有两种状态，买了，没买
每一种状态的利润最大值都与前一种状态有关

则 dp[i][0] 表示第i天交易完后手里没有股票的最大利润
   dp[i][1] 表示第i天交易完后手里有股票的最大利润

dp[i][0] 1.如果这一天结束，手里持有一支股票，即dp[i-1][1]将其卖出可以获得pices[i]的收益
         2.不卖出 dp[i-1][0]

dp[i][1] 1.前一天持有一支股票不卖出，即dp[i-1][1]
         2.前一天结束时还没有股票

最后手里没有股票肯定是赚最多的
'''

def test(prices):
          n = len(prices)
          dp = [[0 for i in range(2)]for j in range(n)]
          dp[0][1] = -prices[0]
          for i in range(1,n):
                    dp[i][0] = max(dp[i-1][0],dp[i-1][1]+prices[i])
                    dp[i][1] = max(dp[i-1][1],dp[i-1][0]-prices[i])
          return dp[n-1][0]

prices = [1,2,3,4,5]
ans = test(prices)
print(ans)
